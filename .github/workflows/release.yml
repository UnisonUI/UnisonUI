name: Release

on:
  push:
    tags: ["v*"]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get release version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install and run Kokai
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          cargo install kokai
          kokai release --ref $RELEASE_VERSION  --git-url https://github.com/UnisonUI/UnisonUI --add-links github:commits,issues > release.md
          echo "\`docker pull ${REGISTRY}/${IMAGE_NAME}:${RELEASE_VERSION}\`" >> release.md
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body_path: release.md
          draft: false
          prerelease: false
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - unisonui
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get release version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Elixir
        id: setup-beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.15.0"
          otp-version: "26.0.1"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ steps.setup-beam.outputs.otp-version }}-${{ steps.setup-beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ steps.setup-beam.outputs.otp-version }}-${{ steps.setup-beam.outputs.elixir-version }}-
            ${{ runner.os }}-mix-${{ steps.setup-beam.outputs.otp-version }}-
            ${{ runner.os }}-mix-
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
      - name: Install dependencies
        run: mix deps.get --only prod
      - name: Create release
        id: mix_release
        env:
          MIX_ENV: prod
        run: mix release ${{matrix.app}}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        with:
          push: true
          build-args: RELEASE=${{matrix.app}}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
