[logger.console]
level = '{{getv "/logger/level" "info"}}'
{{if exists "/logger/format"}}format = '{{getv "/logger/format"}}'{{end}}

[unison_ui]
self_specification = {{getv "/unisonui/specification" "false"}}
port = {{getv "/unisonui/http/port" "8080"}}

[clustering]
{{ with getvs "/clustering/hosts/*" -}}
provider = 'hosts'
hosts = [{{- range .}}
  '{{.}}',
{{- end}}
]
{{- else -}}
{{ if exists "/clustering/kubernetes/namespace" -}}
provider = 'kubernetes'
[clustering.kubernetes]
service = '{{getv "/clustering/kubernetes/service" "unisonui"}}'
application_name = '{{getv "/clustering/kubernetes/application" "unisonui"}}'
namespace = '{{getv "/clustering/kubernetes/namespace"}}'
{{- else -}}
{{if exists "/clustering/gcp" -}}
provider = 'gcp'
gcp = '{{getv "/clustering/gcp"}}'
{{- else -}}
{{ with ls "/clustering/aws" -}}
provider = 'aws'
[clustering.aws]
{{if exists "/clustering/aws/name"}}tag_name = '{{getv "/clustering/aws/name"}}'{{end}}
{{if exists "/clustering/aws/value"}}tag_value = '{{getv "/clustering/aws/value"}}'{{end}}
application_name = '{{getv "/clustering/aws/prefix" "unisonui"}}'
{{- else -}}
provider = false
{{- end -}}
{{- end -}}
{{- end -}}
{{end}}

[services]
{{if (or (exists "/storage/backend/raft/quorum") (gt (len (ls "/storage/backend/raft/hosts")) 0))}}
storage_backend = 'Services.Storage.Raft'
[services.raft]
{{if exists "/storage/backend/raft/quorum"}}
quorum = {{getv "/storage/backend/raft/quorum"}}
{{else}}
{{with getvs "/storage/backend/raft/hosts/*" -}}
nodes = [{{- range .}}
  '{{.}}',
{{- end}}
]
{{end}}
{{end}}
{{- else -}}
storage_backend = 'Services.Storage.Memory'
{{end}}

[webhook_provider]
{{with ls "/provider/webhook" -}}
enabled = true
port = {{getv "/provider/webhook/port" "3000"}}
self_specification = {{getv "/provider/webhook/specification" "false"}}
{{- else -}}
enabled = false
{{end}}

[git_provider]
{{with ls "/provider/git" -}}
enabled = true
pull_interval = '{{getv "/provider/git/interval" "2h"}}'
{{with ls "/provider/git/github" -}}
[git_provider.github]
api_uri = '{{getv "/provider/git/github/uri" "https://api.github.com/graphql"}}'
api_token = '{{getv "/provider/git/github/token" ""}}'
polling_interval = '{{getv "/provider/git/github/interval" "1h"}}'
{{ with getvs "/provider/git/github/patterns/*" -}}
patterns = [{{- range .}}
  '{{.}}',
{{- end}}
]
{{end}}
{{end}}
{{- else -}}
enabled = false
{{end}}

[container_provider]
{{with ls "/provider/container" -}}
enabled = true

{{with ls "/provider/container/labels" -}}
[container_provider.labels]
service_name = '{{getv "/provider/container/labels/name" "unisonui.service-name"}}'

[container_provider.labels.openapi]
port = '{{getv "/provider/container/labels/openapi/port" "unisonui.openapi.port"}}'
protocol = '{{getv "/provider/container/labels/openapi/protocol" "unisonui.openapi.protocol"}}'
specification_path = '{{getv "/provider/container/labels/openapi/path" "unisonui.openapi.path"}}'
use_proxy = '{{getv "/provider/container/labels/openapi/proxy" "unisonui.openapi.use-proxy"}}'

[container_provider.labels.asyncapi]
port = '{{getv "/provider/container/labels/asyncapi/port" "unisonui.asyncapi.port"}}'
protocol = '{{getv "/provider/container/labels/asyncapi/protocol" "unisonui.asyncapi.protocol"}}'
specification_path = '{{getv "/provider/container/labels/asyncapi/path" "unisonui.asyncapi.path"}}'

[container_provider.labels.grpc]
port = '{{getv "/provider/container/labels/grpc/port" "unisonui.grpc.port"}}'
tls = '{{getv "/provider/container/labels/grpc/tls" "unisonui.grpc.tls"}}'
{{end}}

[container_provider.kubernetes]
{{if exists "/provider/container/kubernetes" -}}
enabled = true
polling_interval = '{{getv "/provider/container/kubernetes"}}'
{{- else -}}
enabled = false
{{end}}

[container_provider.docker]
{{if exists "/provider/container/docker" -}}
enabled = true
host = '{{getv "/provider/container/docker"}}'
{{- else -}}
enabled = false
{{end}}
{{- else -}}
enabled = false
{{end}}
